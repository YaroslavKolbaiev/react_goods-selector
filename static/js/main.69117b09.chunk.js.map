{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedItem","selectButton","item","setState","removeButton","element","goodToRemove","currentTarget","parentElement","innerText","split","slice","toString","filter","x","titleText","length","map","i","arr","join","this","className","type","classNames","onClick","goodsFromServer","includes","e","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCAWA,EAAb,4MACEC,MAAyB,CACvBC,aAAc,CAAC,QAFnB,EAKEC,aAAe,SAACC,GACd,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,aAAa,GAAD,mBACPD,EAAMC,cADC,CAEVE,SATR,EAcEE,aAAe,SAACC,GAA+B,IAAD,EACtCC,EAAY,UAChBD,EAAQE,cAAcC,qBADN,aAChB,EAAqCC,UAAUC,MAAM,MACpDC,MAAM,EAAG,GAAGC,WAEf,EAAKT,UAAS,SAACJ,GAAD,MAAY,CACxBC,aAAc,YACTD,EAAMC,cACTa,QAAO,SAAAC,GAAC,OAAIA,IAAMR,UAtB1B,EA0BES,UAAY,WACV,IAAQf,EAAiB,EAAKD,MAAtBC,aAER,OAAQA,EAAagB,QACnB,QACE,MAAM,GAAN,OAAUhB,EAAaiB,KAAI,SAACf,EAAMgB,EAAGC,GACnC,OAAID,IAAMC,EAAIH,OAAS,EACdd,EAGLgB,IAAMC,EAAIH,OAAS,EACf,OAAN,OAAcd,GAGV,GAAN,OAAUA,EAAV,QACCkB,KAAK,KAVR,iBAWF,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUpB,EAAaY,WAAvB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUZ,EAAaiB,KAAI,SAACf,EAAMgB,EAAGC,GAAV,OACzBD,IAAMC,EAAIH,OAAS,EAAnB,cAA8Bd,GAASA,KAAOkB,KAAK,KADrD,mBA/CR,4CAoDE,WAAU,IAAD,OACCpB,EAAiBqB,KAAKtB,MAAtBC,aAER,OACE,sBAAMsB,UAAU,MAAhB,SACE,sBAAKA,UAAU,eAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,qBAAIA,UAAU,aAAd,UAEID,KAAKN,YAGP,wBACEQ,KAAK,SACLD,UAAWE,IAAW,aACpB,CAAE,sBAAuBxB,EAAagB,SACxCS,QAAS,WACP,EAAKtB,SAAS,CAAEH,aAAc,MALlC,wBAcJ,oBAAIsB,UAAU,YAAd,SACGI,EAAgBT,KAAI,SAAAf,GAAI,OACvB,qBAEEoB,UAAWE,IAAW,OACpB,CAAE,eAAgBxB,EAAa2B,SAASzB,KAH5C,UAMGA,EAED,wBACEqB,KAAK,SACLD,UAAWE,IAAW,eACpB,CAAE,uBAAwBxB,EAAa2B,SAASzB,KAClDuB,QAAS,kBAAM,EAAKxB,aAAaC,IAJnC,oBASA,wBACEqB,KAAK,SACLD,UAAWE,IAAW,eACpB,CAAE,wBAAyBxB,EAAa2B,SAASzB,KACnDuB,QAAS,SAACG,GAAD,OAAO,EAAKxB,aAAawB,IAJpC,sBAhBK1B,iBAjFrB,GAAyB2B,IAAMC,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.69117b09.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedItem: string[]\n};\n\nexport class App extends React.Component<{}, State > {\n  state: Readonly<State> = {\n    selectedItem: ['Jam'],\n  };\n\n  selectButton = (item: string) => {\n    this.setState((state) => ({\n      selectedItem: [\n        ...state.selectedItem,\n        item,\n      ],\n    }));\n  };\n\n  removeButton = (element: React.MouseEvent) => {\n    const goodToRemove\n    = element.currentTarget.parentElement?.innerText.split('\\n')\n      .slice(0, 1).toString();\n\n    this.setState((state) => ({\n      selectedItem: [\n        ...state.selectedItem,\n      ].filter(x => x !== goodToRemove),\n    }));\n  };\n\n  titleText = () => {\n    const { selectedItem } = this.state;\n\n    switch (selectedItem.length) {\n      default:\n        return `${selectedItem.map((item, i, arr) => {\n          if (i === arr.length - 2) {\n            return item;\n          }\n\n          if (i === arr.length - 1) {\n            return `and ${item}`;\n          }\n\n          return `${item},`;\n        }).join(' ')} are selected`;\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedItem.toString()} is selected`;\n      case 2:\n        return `${selectedItem.map((item, i, arr) => (\n          i === arr.length - 1 ? `and ${item}` : item)).join(' ')} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedItem } = this.state;\n\n    return (\n      <main className=\"App\">\n        <div className=\"App__wrapper\">\n          <header className=\"App__header\">\n            <h1 className=\"App__title\">\n              {\n                this.titleText()\n              }\n\n              <button\n                type=\"button\"\n                className={classNames('App__clear',\n                  { 'App__clear--active': !selectedItem.length })}\n                onClick={() => {\n                  this.setState({ selectedItem: [] });\n                }}\n              >\n                Clear\n              </button>\n            </h1>\n\n          </header>\n\n          <ul className=\"App__list\">\n            {goodsFromServer.map(item => (\n              <li\n                key={item}\n                className={classNames('Good',\n                  { 'Good--active': selectedItem.includes(item) })}\n              >\n\n                {item}\n\n                <button\n                  type=\"button\"\n                  className={classNames('Good__select',\n                    { 'Good__select--active': selectedItem.includes(item) })}\n                  onClick={() => this.selectButton(item)}\n                >\n                  Select\n                </button>\n\n                <button\n                  type=\"button\"\n                  className={classNames('Good__remove',\n                    { 'Good__remove--active': !selectedItem.includes(item) })}\n                  onClick={(e) => this.removeButton(e)}\n                >\n                  Remove\n                </button>\n\n              </li>\n            ))}\n          </ul>\n        </div>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}